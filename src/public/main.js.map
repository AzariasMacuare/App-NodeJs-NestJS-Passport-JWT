{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/service/token-inteceptor.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/app.module.ts","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/service/login-app.service.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgModel } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { LoginAppService } from 'src/app/service/login-app.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  url = 'http://localhost:3000';\n  allTask: [];\n  \n    name: String = '';\n    description: String = '';\n    id: Number | string;\n\n    add: Boolean = false;\n  \n\n  constructor(private http: HttpClient, private router: Router, public appServices: LoginAppService) { }\n\n  ngOnInit(): void {\n    const id =  this.appServices.getUserId()\n    this.appServices.getAlltasks(id).subscribe(\n      res => {\n        this.allTask = res as []\n      },\n      err => {\n        this.router.navigate(['/'])\n      }\n    )\n  }\n\n  // Save new Taske or\n  // Update Task already exist\n\n  saveTask() {\n    const task = {\n      name: this.name,\n      description: this.description,\n      belong: localStorage.getItem('sub')\n      }\n\n\n    if (!this.id) {\n        this.appServices.createTask(task).subscribe(\n          res => {\n            this.ngOnInit()\n            this.name = '';\n            this.description = '';\n          },\n          err => console.error(err)\n        )\n    } else {\n        this.appServices.updatetask(this.id, task).subscribe(\n          res => {\n            this.ngOnInit();\n            this.name = '';\n            this.description = '';\n          }\n      )\n    }\n  }\n\n  // Delete Task\n\n  deleteTask(id: Number) {\n    this.appServices.deleteTask(id).subscribe(\n      res => {\n        this.ngOnInit()\n      },\n      err => console.error(err),\n    )\n  }\n\n  // Edit task\n\n  editTask(name: string, description: string, id: Number) {\n    this.name = name;\n    this.description = description;\n    this.id = id;\n    this.add = true;\n  }\n\n}\n","<div class=\"m-2\">\n    <button *ngIf=\"add == false\" (click)=\"add = true\" class=\"btn btn-success ms-2 material-icons\">\n        add\n</button>\n<div *ngIf=\"add && appServices.verifyLogged()\" class=\"col-md-4 mb-3 d-flex\">\n    <div class=\"card bg-success text-center text-white\">\n        <span (click)=\"add = false\" class=\"material-icons\" style=\"cursor: pointer;\">\n            clear\n        </span>\n        <h6>Add new Task</h6>\n        <div class=\"card-body\">\n            <form autocomplete=\"off\">\n                <div class=\"form-group  mb-1\">\n                    <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Name of Your Task\" [(ngModel)]=\"name\">\n                </div>\n                <div class=\"form-group  mb-1\">\n                    <input class=\"form-control\" type=\"text\" name=\"description\" placeholder=\"Description of Your Task\" [(ngModel)]=\"description\">\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn btn-primary form-control\" (click)=\"saveTask()\">Save</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n</div>\n<div class=\"container\">\n\n    <div class=\"row mt-1\">\n\n       \n        <div class=\"col-md-4 mb-1\" *ngFor=\"let task of allTask\">\n            <div class=\"card bg-primary text-white\">\n                <div class=\"card-header d-flex justify-content-between\">\n                    {{task.name}}\n                        <div>\n                            <span (click)=\"deleteTask(task._id)\" class=\"material-icons\" style=\"cursor: pointer;\">\n                                clear\n                            </span>\n                            <span (click)=\"editTask(task.name, task.description, task._id)\" class=\"material-icons\" style=\"cursor: pointer;\">\n                                create\n                            </span>\n                        </div>\n                </div>\n                <div class=\"card-body\">\n                    {{task.description}}\n                </div>\n                \n            </div>\n        </div>\n\n    </div>\n    \n    <div class=\"row\">\n        \n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInteceptorService implements HttpInterceptor {\n\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    // const refresh = localStorage.getItem('refr');\n    const tokeniceReq = req.clone({\n      setHeaders: {Authorization: `Bearer ${token}`},\n    })\n    return next.handle(tokeniceReq);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'nes-app-frontend';\n}\n","<app-navigation></app-navigation>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { NgForm, NgModel } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { Token } from './model/token.model'\nimport Swal from 'sweetalert2'\nimport { LoginAppService } from 'src/app/service/login-app.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public appServices: LoginAppService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(form) {\n    this.appServices.loginUser(form.value).subscribe(\n      res => {\n        if(res == null || undefined) {\n          Swal.fire(\n            'Sorry',\n            'Your username or password is incorrect',\n            'error'\n          )\n        } else {\n          console.log(res)\n          this.appServices.storeTokenAndIdAndRefresh(res[0].access_token, res[1].id, res[2].refresh)\n          this.router.navigate(['/profile'])\n        }\n      },\n      err => console.log(err)\n    )\n  }\n\n  signup(form) {\n    \n  }\n\n}\n","<div class=\"container d-flex justify-content-center align-items-center text-white h-100\">\n    \n    <div class=\"card col-md-5\">\n            <div class=\"card-body pb-5\">\n                <div class=\"container p-3\">\n                    <div class=\"text-center\">\n                        <a *ngIf=\"!appServices.verifyLogged()\" routerLink=\"/signup\" class=\"buttons-logins me-2\">Signup</a>\n                        <a *ngIf=\"!appServices.verifyLogged()\" routerLink=\"/\" class=\"buttons-logins ms-2\">Login</a>\n                    </div>\n                </div>\n                \n                <form #form=\"ngForm\" (ngSubmit)=\"login(form)\" id=\"waterform\" autocomplete=\"off\">\n                    <div class=\"input-group mb-2\">\n                        <input type=\"text\" class=\"form-control text-center\" placeholder=\"Username\" name=\"username\" ngModel #username>\n                    </div>\n                    <div class=\"form-group mb-2\">\n                        <input type=\"password\" class=\"form-control text-center\" placeholder=\"Password\" name=\"password\" ngModel #password>\n                    </div>\n                    <div class=\"d-grid gap-2 col-6 mx-auto\">\n                        <button class=\"btn p-3\" type=\"submit\" id=\"button-for-login-or-signin\">Log in</button>\n                      </div>\n                </form>\n            </div>\n            <div class=\"card-footer\">\n                <h6 class=\"text-muted text-center\">forgot password?</h6>\n            </div>\n        </div>\n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginAppService } from 'src/app/service/login-app.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor(private http: HttpClient, private router: Router, public appServices: LoginAppService) { }\n\n  ngOnInit(): void {\n  }\n\n  signup(form) {\n    if (form.value.password === form.value.confirmPassword) {\n        this.appServices.createNewUser(form.value).subscribe(\n          res => {\n            if (!res) {\n              return Swal.fire(\n                'Sorry',\n                'Username already exist. Please your choose some other',\n                'error'\n              )\n            }\n            this.router.navigate(['/'])\n          },\n          err => console.error(err),\n        )\n    } else {\n      return Swal.fire(\n        'Sorry',\n        'Yours Passwords dont match. Please insert it again',\n        'error'\n      )\n    }\n  }\n\n}\n","<div class=\"container d-flex justify-content-center align-items-center text-white h-100\">\n    <div class=\"card col-md-5\">\n            <div class=\"card-body pb-5\">\n                <div class=\"container p-3\">\n                    <div class=\"text-center\">\n                        <a *ngIf=\"!appServices.verifyLogged()\" routerLink=\"/signup\" class=\"buttons-logins me-2\">Signup</a>\n                        <a *ngIf=\"!appServices.verifyLogged()\" routerLink=\"/\" class=\"buttons-logins ms-2\">Login</a>\n                    </div>\n                </div>\n                \n                <form #form=\"ngForm\" (ngSubmit)=\"signup(form)\" id=\"waterform\" autocomplete=\"off\">\n                    \n                    <div class=\"input-group mb-2\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Insert your name\" name=\"name\" ngModel #name>\n                        <span class=\"input-group-text\">&</span>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"username\" name=\"username\" ngModel #username>\n                    </div>\n                    \n                    <div class=\"form-group mb-2\">\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Insert your password\" name=\"password\" ngModel #password>\n                    </div>\n\n                    <div class=\"form-group mb-2\">\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" name=\"confirmPassword\" ngModel #confirmPassword>\n                    </div>\n                    \n                    <div class=\"d-grid gap-2 col-6 mx-auto\">\n                        <button class=\"btn p-3\" type=\"submit\" id=\"button-for-login-or-signin\">Sign Up</button>\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"card-footer\">\n                <h6 class=\"text-muted text-center\">forgot password?</h6>\n            </div>\n        </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module'\nimport { TokenInteceptorService } from './service/token-inteceptor.service'\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { NavigationComponent } from './components/navigation/navigation.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProfileComponent,\n    SigninComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AuthGuard, \n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInteceptorService,\n    multi: true \n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginAppService } from 'src/app/service/login-app.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  add: Boolean = false;\n\n  constructor(public appServices: LoginAppService) { }\n\n  ngOnInit(): void {\n  }\n  \n  logout() {\n    this.appServices.logout()\n  }\n\n}\n","<nav class=\"nav p-2\">\n    <li class=\"nav-item m-1\" style=\"float: right;\">\n        <button *ngIf=\"appServices.verifyLogged()\" (click)=\"logout()\" class=\"btn btn-primary\">\n            Logout\n        </button>\n        <button *ngIf=\"appServices.verifyLogged()\" routerLink=\"/profile\" class=\"btn btn-primary ms-2\">\n            Profile\n        </button>\n    </li>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginAppService {\n\n  url = ''\n\n  constructor(private http: HttpClient, private router: Router) { }\n                        // Services for Signin or Signup\n\n  createNewUser(user) {\n    return this.http.post(`${this.url}/users`, user);\n  }\n\n  loginUser(user) {\n    return this.http.post(`${this.url}/api/auth/login`, user)\n  }\n\n                        // Services for CRUD of the Tasks\n\n  //Service for create task \n\n  createTask(task) {\n    return this.http.post(`${this.url}/task`, task)\n  }\n\n  //Service for get all tasks \n\n  getAlltasks(id: number | string) {\n    return this.http.get(`${this.url}/api/profile/${id}`);\n  }\n\n  //Service for update task \n\n  updatetask(id: Number | string, taskForUpdate) {\n    return this.http.put(`${this.url}/task/edit-task/${id}`, taskForUpdate)\n  }\n\n  //Service for delete task \n\n  deleteTask(id: Number) {\n    return this.http.delete(`${this.url}/task/delete-task/${id}`)\n  }\n\n\n                            // Services for Logedd, Verify Logged, and logout\n  storeTokenAndIdAndRefresh(token, id, refresh) {\n    localStorage.setItem('token', token)\n    localStorage.setItem('sub', id)\n    localStorage.setItem('refr', refresh)\n  }\n\n  verifyLogged() {\n    return !!localStorage.getItem('token')\n  }\n\n  getUserId() {\n    return localStorage.getItem('sub');\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('sub');\n    localStorage.removeItem('refr');\n    this.router.navigate(['/']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(): boolean {\n    const verify = !!localStorage.getItem('token')\n    if(verify) {\n      return true\n    }\n    this.router.navigate(['/'])\n    return false\n  }\n  \n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from'@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { SigninComponent } from './components/signin/signin.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SigninComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}